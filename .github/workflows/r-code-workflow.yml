# .github/workflows/render-rmarkdown.yml
name: Render R Markdown Workflows

on:
  schedule:
    - cron: '0 0 * * *'    # 毎日 00:00 UTC
  workflow_dispatch:      # 手動トリガー

# GITHUB_TOKEN にリポジトリ書き込み権限を付与
permissions:
  contents: write

jobs:
  run_r_code:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをフル履歴付きでチェックアウト
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      # 2. R のセットアップ
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      # 3. システム依存ライブラリのインストール
      - name: Install system libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pandoc \
            libxml2-dev libicu-dev libssl-dev libcurl4-openssl-dev \
            libfontconfig1-dev libfreetype6-dev libpng-dev libjpeg-dev libtiff5-dev \
            libharfbuzz-dev libfribidi-dev

      # 4. パッケージキャッシュ（任意）
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/Rlibrary
          key: ${{ runner.os }}-rlibs-${{ hashFiles('**/*.Rmd') }}

      # 5. R パッケージのインストール
      - name: Install R packages
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          mkdir -p "$R_LIBS_USER"
          Rscript -e 'install.packages(
            c("rmarkdown","tidyverse","rvest","lubridate"),
            repos="https://cloud.r-project.org",
            dependencies=TRUE
          )'

      # 6. 初回処理
#      - name: Render initial processing (first run only)
#        env:
#          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
#        run: |
#          if [ ! -f initialized.lock ]; then
#            Rscript -e "rmarkdown::render('initial_processing.Rmd')"
#            touch initialized.lock
#          else
#            echo "Initial processing already completed."
#          fi
#
      # 7. 日次処理
      - name: Render daily task
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          Rscript -e "rmarkdown::render('daily_task.Rmd')"

      # 8. 生成された CSV をコミット＆プッシュ
      - name: Commit and push CSVs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # 出力先と合致するパスをまとめて add
          git add data-*.csv merged_data/*.csv || echo "No CSV files to add"
          # 変更があればコミット
          git diff --cached --quiet || git commit -m "Update disease CSV outputs"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
