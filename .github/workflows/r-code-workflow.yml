name: Run R Markdown Workflows

on:
  schedule:
    - cron: '0 0 * * *'   # Runs daily at 00:00 UTC
  workflow_dispatch:       # Allow manual dispatch

jobs:
  run_r_code:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up R
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        # You can optionally pin a version, e.g.:
        # with:
        #   r-version: '4.2.0'

      # 3. Install system libraries needed to build tidyverse etc.
      - name: Install system libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            libxml2-dev \
            libicu-dev \
            libssl-dev \
            libcurl4-openssl-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libjpeg-dev \
            libtiff5-dev

      # 4. Create a user library directory (if you want to install packages there)
      - name: Create R library directory
        run: mkdir -p ${{ github.workspace }}/Rlibrary

      # 5. Install required R packages into that user library
      - name: Install required R packages
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          Rscript -e 'install.packages(c("rmarkdown","tidyverse","rvest","lubridate"), 
                                       repos="https://cloud.r-project.org", 
                                       dependencies=TRUE)'

      # 6. Verify that tidyverse loads
      - name: Verify installed packages
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          Rscript -e 'sessionInfo(); library(tidyverse); library(rvest); library(lubridate); cat("Packages loaded successfully!\n")'

      # 7. Render initial processing if first run
      - name: Render initial processing (if not already run)
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          if [ ! -f initialized.lock ]; then
            Rscript -e "rmarkdown::render('initial_processing.Rmd')"
            touch initialized.lock
          else
            echo 'Initial processing already completed.'
          fi

      # 8. Render daily task
      - name: Render daily task
        env:
          R_LIBS_USER: ${{ github.workspace }}/Rlibrary
        run: |
          Rscript -e "rmarkdown::render('daily_task.Rmd')"
